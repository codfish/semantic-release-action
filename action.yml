name: 'Semantic Release Action'
description:
  'Runs `semantic-release`. Respects .releaserc.js in your repo. Exports version variables for you
  to use in subsequent actions.'
author: 'codfish'
branding:
  icon: 'arrow-up-right'
  color: 'orange'
inputs:
  branches:
    description:
      'The branches on which releases should happen.
      https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#branches'
    required: false
  extends:
    description:
      'List of modules or file paths containing .
      https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#extends'
    required: false
  plugins:
    description:
      'Define the list of plugins to use. Plugins will run in series, in the order defined, for each
      steps if they implement it.
      https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#plugins'
    required: false
  additional_packages:
    description:
      'Define a list of additional plugins or shareable configurations (official or community) to
      install. Use this if you 1) use any plugins other than commit-analyzer, release-notes-generator,
      github, or npm, which are already installed along with semantic-release or 2) want to extend
      from a shareable configuration.
      https://semantic-release.gitbook.io/semantic-release/extending/plugins-list'
    required: false
  dry_run:
    description:
      'The objective of the dry-run mode is to get a preview of the pending release. Dry-run mode
      skips the following steps: prepare, publish, success and fail.
      https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#dryrun'
    required: false
  repository_url:
    description:
      'The git repository URL.
      https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#repositoryurl'
    required: false
  tag_format:
    description:
      'The Git tag format used by semantic-release to identify releases.
      https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#tagformat'
    required: false
  branch:
    description:
      'DEPRECATED. Will continue to be supported for v1. Use `branches` instead. Previously used in
      semantic-release v15 to set a single branch on which releases should happen.
      https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#branches'
    required: false
outputs:
  new-release-published:
    description:
      "Either `'true'` when a new release was published or `'false'` when no release was published"
  release-version:
    description: "The new releases' semantic version, i.e. `1.8.3`"
  release-major:
    description: "The new releases' major version number, i.e. `1`"
  release-minor:
    description: "The new releases' minor version number, i.e. `8`"
  release-patch:
    description: "The new releases' patch version number, i.e. `3`"
runs:
  using: 'docker'
  image: 'Dockerfile'
